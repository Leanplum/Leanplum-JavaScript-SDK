!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.Leanplum=t():e.Leanplum=t()}(window,(function(){return function(e){var t={};function n(o){if(t[o])return t[o].exports;var i=t[o]={i:o,l:!1,exports:{}};return e[o].call(i.exports,i,i.exports,n),i.l=!0,i.exports}return n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(o,i,function(t){return e[t]}.bind(null,i));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=104)}({104:function(e,t){var n="__name__",o="Open URL",i="URL",r={};self.addEventListener("push",(function(e){var t=e.data&&e.data.text()?e.data.text():null;if(t){var a=JSON.parse(t);if(a&&a.title&&a.tag){a.data&&a.data.openAction&&a.data.openAction.hasOwnProperty(n)&&a.data.openAction[n]===o&&a.data.openAction.hasOwnProperty(i)&&(r[a.tag]=a.data.openAction[i]);var l=a.title;delete a.title,e.waitUntil(self.registration.showNotification(l,a))}else console.log("Leanplum: No options, title or tag/id received, skipping display.")}else console.log("Leanplum: Push received without payload, skipping display.")})),self.addEventListener("notificationclick",(function(e){if(console.log("Leanplum: [Service Worker] Notification click received."),e.notification.close(),e.notification&&e.notification.tag){var t=e.notification.tag,n=r[t];n?(delete r[t],e.waitUntil(clients.openWindow(n))):console.log("Leanplum: [Service Worker] No action defined, doing nothing.")}else console.log("Leanplum: No notification or tag/id received, skipping open action.")}))}})}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,